# 나의 풀이
pal = list(input())
new_pal = []
for char in pal :
    if char.isalpha():
        new_pal.append(char.lower())

if new_pal[::] == new_pal[::-1] :
    print("회문")
else:
    print("회문 아님")
    
#리스트
def isPalindrome(s: str) -> bool :
    strs = []
    for char in s :
        if char.isalnum() :
            strs.append(char.lower())
    
    #팰린드롬 여부 판별
    while len(strs) > 1 :
        if strs.pop(0) != strs.pop() :
            return False
    
    return True

#데크 자료형
import collections

def isPalindrome(s: str) -> bool :
    #자료형 데크
    strs: Deque = collections.deque()

    for char in s :
        if char.isalnum() :
            strs.append(char.lower())

    while len(strs) > 1 :
        if strs.popleft() != strs.pop() :
            return False
    
    return True

#슬라이싱
import re

def isPalindrome(s: str) -> bool :
    s = s.lower()
    # 정규식으로 불필요한 문자 필터링 (s 안에 있는 [a-z0-9]를 ''로 바꿈)
    s = re.sub('[^a-z0-9]', '', s)

    return s == s[::-1] #슬라이싱
